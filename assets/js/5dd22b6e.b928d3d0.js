"use strict";(self.webpackChunkkakarot=self.webpackChunkkakarot||[]).push([[546],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,k=p["".concat(o,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[p]="string"==typeof e?e:r,l[1]=c;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1011:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={},l="Contract account",c={unversionedId:"kakarot/accounts/contract/contract_account",id:"kakarot/accounts/contract/contract_account",title:"Contract account",description:"View",source:"@site/docs/kakarot/accounts/contract/contract_account.md",sourceDirName:"kakarot/accounts/contract",slug:"/kakarot/accounts/contract/contract_account",permalink:"/kinto-un/docs/kakarot/accounts/contract/contract_account",draft:!1,editUrl:"https://github.com/sayajin-labs/kakarot/docs/kakarot/accounts/contract/contract_account.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Kakarot",permalink:"/kinto-un/docs/kakarot/"},next:{title:"Library",permalink:"/kinto-un/docs/kakarot/accounts/contract/library"}},o={},s=[{value:"View",id:"view",level:2},{value:"<code>get_evm_address</code>",id:"get_evm_address",level:3},{value:"Implicit arguments",id:"implicit-arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>bytecode</code>",id:"bytecode",level:3},{value:"Implicit arguments",id:"implicit-arguments-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<code>bytecode_len</code>",id:"bytecode_len",level:3},{value:"Implicit arguments",id:"implicit-arguments-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<code>storage</code>",id:"storage",level:3},{value:"Implicit arguments",id:"implicit-arguments-3",level:4},{value:"Explicit arguments",id:"explicit-arguments",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<code>is_initialized</code>",id:"is_initialized",level:3},{value:"Implicit arguments",id:"implicit-arguments-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"External",id:"external",level:2},{value:"<code>initialize</code>",id:"initialize",level:3},{value:"Implicit arguments",id:"implicit-arguments-5",level:4},{value:"Explicit arguments",id:"explicit-arguments-1",level:4},{value:"<code>write_bytecode</code>",id:"write_bytecode",level:3},{value:"Implicit arguments",id:"implicit-arguments-6",level:4},{value:"Explicit arguments",id:"explicit-arguments-2",level:4},{value:"<code>write_storage</code>",id:"write_storage",level:3},{value:"Implicit arguments",id:"implicit-arguments-7",level:4},{value:"Explicit arguments",id:"explicit-arguments-3",level:4}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"contract-account"},"Contract account"),(0,r.kt)("h2",{id:"view"},"View"),(0,r.kt)("h3",{id:"get_evm_address"},(0,r.kt)("inlineCode",{parentName:"h3"},"get_evm_address")),(0,r.kt)("h4",{id:"implicit-arguments"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \n")),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"address (felt)  \n")),(0,r.kt)("h3",{id:"bytecode"},(0,r.kt)("inlineCode",{parentName:"h3"},"bytecode")),(0,r.kt)("p",null,"This function is used to get the bytecode of the smart contract."),(0,r.kt)("h4",{id:"implicit-arguments-1"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"bytecode_len (felt)  \nbytecode (felt*)  \n")),(0,r.kt)("h3",{id:"bytecode_len"},(0,r.kt)("inlineCode",{parentName:"h3"},"bytecode_len")),(0,r.kt)("p",null,"This function is used to get only the bytecode_len of the smart contract."),(0,r.kt)("h4",{id:"implicit-arguments-2"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"len (felt)  \n")),(0,r.kt)("h3",{id:"storage"},(0,r.kt)("inlineCode",{parentName:"h3"},"storage")),(0,r.kt)("p",null,"Read a given storage key"),(0,r.kt)("h4",{id:"implicit-arguments-3"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,r.kt)("h4",{id:"explicit-arguments"},"Explicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"key (Uint256)  \n")),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"value (Uint256)  \n")),(0,r.kt)("h3",{id:"is_initialized"},(0,r.kt)("inlineCode",{parentName:"h3"},"is_initialized")),(0,r.kt)("p",null,"This function checks if the account was initialized."),(0,r.kt)("h4",{id:"implicit-arguments-4"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"is_initialized (felt): : 1 if the account has been initialized 0 otherwise.  \n")),(0,r.kt)("h2",{id:"external"},"External"),(0,r.kt)("h3",{id:"initialize"},(0,r.kt)("inlineCode",{parentName:"h3"},"initialize")),(0,r.kt)("h4",{id:"implicit-arguments-5"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,r.kt)("h4",{id:"explicit-arguments-1"},"Explicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"kakarot_address (felt)  \nevm_address (felt)  \n")),(0,r.kt)("h3",{id:"write_bytecode"},(0,r.kt)("inlineCode",{parentName:"h3"},"write_bytecode")),(0,r.kt)("p",null,"Store the bytecode of the contract."),(0,r.kt)("h4",{id:"implicit-arguments-6"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,r.kt)("h4",{id:"explicit-arguments-2"},"Explicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"bytecode_len (felt): : The length of the bytecode.  \nbytecode (felt*): : The bytecode of the contract.  \n")),(0,r.kt)("h3",{id:"write_storage"},(0,r.kt)("inlineCode",{parentName:"h3"},"write_storage")),(0,r.kt)("p",null,"Store a key-value pair"),(0,r.kt)("h4",{id:"implicit-arguments-7"},"Implicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"syscall_ptr (felt*)  \npedersen_ptr (HashBuiltin*)  \nrange_check_ptr  \nbitwise_ptr (BitwiseBuiltin*)  \n")),(0,r.kt)("h4",{id:"explicit-arguments-3"},"Explicit arguments"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"key (Uint256): : The bytes32 storage key.  \nvalue (Uint256): : The bytes32 stored value.  \n")))}p.isMDXComponent=!0}}]);